lw r0 #62  // 100 000 xxx 
lw r1 #63  // 100 001 xxx
lw r2      // 100 010 xxx
lw r3      // 100 011 xxx
lw r4      // 100 100 xxx
lw r5      // 100 101 xxx

// For ALU ops regA[5:3] and regB[2:0]

xor r2 r1 #0x20  // 001 10 01 00
sw r2 #64        // 101 10 ????
and r4, r0, r1   // 011 ?? 00 01

shift left r1    // 010 01 00 01
xor r2, r1       // 001 ?? 10 01
shift left r2    // 010 10 00 01
lbl
sw r2 #64        // 101 10 ????
add r3, r3, #1   // 000 11 11 01
xor r4, r3       // 001 100 011

bne lbl // 110 ??? ???

// for-loop 1
xor r // 001 ??? ???
beq // ??? ??? ???

// for-loop 2
bne lbl2          // 110 ??? ???
bne r2 #32        // 110 10 ????
add r2, r1, r0    // 000 10 01 00
branch lbl2       // ??? ??? ???

// helper
1:               // ??? ??? ???
  and r5, r8, r2 // 011 ?? ?? 10
  ls1 r8, r8     // ??? ??? ???
  b lbl          // ??? ??? ???

stp // 111111111